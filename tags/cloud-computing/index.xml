<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cloud-computing on Roomy</title>
    <link>https://wacilpong.github.io/blog/tags/cloud-computing/</link>
    <description>Recent content in cloud-computing on Roomy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>kr-ko</language>
    <lastBuildDate>Sun, 15 Jan 2023 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://wacilpong.github.io/blog/tags/cloud-computing/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>kube 5</title>
      <link>https://wacilpong.github.io/blog/study/kubernetes/5/</link>
      <pubDate>Sun, 15 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/study/kubernetes/5/</guid>
      <description>az postgres 만들고 deployment, service 생성 # 애저에서 postgres database 만든 상태에서 # postgres 로컬에서 확인하기 위한 pgadmin 띄움 # 이후 pgadmin 화면에서 Servers &amp;gt; register &amp;gt; Host name/address # 만들어둔 db의 서버이름(ex. roomypg.postgres.database.azure.com) 지정</description>
    </item>
    
    <item>
      <title>kube 4</title>
      <link>https://wacilpong.github.io/blog/study/kubernetes/4/</link>
      <pubDate>Mon, 02 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/study/kubernetes/4/</guid>
      <description>퍼시스턴트 볼륨(PV), 퍼시스턴트 볼륨 클레임(PVC) 퍼시스턴트 볼륨은 워커 노드들이 네트워크상에서 스토리지를 마운트해 영속적으로 데이터를 저장할 수</description>
    </item>
    
    <item>
      <title>kube 3</title>
      <link>https://wacilpong.github.io/blog/study/kubernetes/3/</link>
      <pubDate>Wed, 14 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/study/kubernetes/3/</guid>
      <description>인그레스(Ingress) 오브젝트의 기본 기능 외부 요청의 라우팅: 특정 경로로 들어온 요청을 어떤 서비스로 전달할지 정의하는 라우팅 규칙 설정 가능 가상 호스트</description>
    </item>
    
    <item>
      <title>kube 2</title>
      <link>https://wacilpong.github.io/blog/study/kubernetes/2/</link>
      <pubDate>Tue, 29 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/study/kubernetes/2/</guid>
      <description>시작하세요! 도커/쿠버네티스 6장 읽기 쿠버네티스는 대부분의 리소스를 &amp;lsquo;오브젝트&#39;라고 불리는 형태로 관리한다. 컨테이너의 집합(Pods)</description>
    </item>
    
    <item>
      <title>kube 1</title>
      <link>https://wacilpong.github.io/blog/study/kubernetes/1/</link>
      <pubDate>Thu, 17 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/study/kubernetes/1/</guid>
      <description>~ 도커 컨테이너에서 기본 사용자는 root, 호스트 이름은 무작위 16진수 해시값이다. docker run 컨테이너 생성 시 -i로 상호입출력, -t로 tty 활성화하여 bash를 사용하</description>
    </item>
    
    <item>
      <title>모두를 위한 클라우드 컴퓨팅 7</title>
      <link>https://wacilpong.github.io/blog/study/cloud-computing/7/</link>
      <pubDate>Tue, 15 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/study/cloud-computing/7/</guid>
      <description>도커와 젠킨스를 이용한 CI/CD 파이프라인 구성 CI (Continuous Integration) 개발자가 작성한 코드가 특정 시간이 아닌 지속적으로 배포되어야 할 통합본에 통합되는 것 이를 통해 언제든지 필요에 따</description>
    </item>
    
    <item>
      <title>모두를 위한 클라우드 컴퓨팅 6</title>
      <link>https://wacilpong.github.io/blog/study/cloud-computing/6/</link>
      <pubDate>Fri, 28 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/study/cloud-computing/6/</guid>
      <description>쿠버네티스(Kubernetes) 등장 배경 소프트웨어 배포 방식의 변화 전통적 배포 방식 한 대의 물리서버에 여러 애플리케이션이 동작 각 애플리케이션 리소스 제</description>
    </item>
    
    <item>
      <title>모두를 위한 클라우드 컴퓨팅 5</title>
      <link>https://wacilpong.github.io/blog/study/cloud-computing/5/</link>
      <pubDate>Sat, 15 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/study/cloud-computing/5/</guid>
      <description>컨테이너 샌드박스(sandbox)화된 런타임 환경 샌드박스화되었다는 의미는 프로세스가 보호된 영역에서 동작한다는 것이다. 따라서 호스트 시스템에 부정적</description>
    </item>
    
    <item>
      <title>모두를 위한 클라우드 컴퓨팅 4</title>
      <link>https://wacilpong.github.io/blog/study/cloud-computing/4/</link>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/study/cloud-computing/4/</guid>
      <description>AWS 루트 사용자는 모든 리소스에 대한 액세스 권한을 갖는 계정이다. IAM(Identity and Access Management) 계정은 특정한 권한에 대한 제약을 갖는다. 가상머신 만들기 서비스 &amp;gt; EC2 &amp;gt; 인스턴스 시작 &amp;gt;</description>
    </item>
    
    <item>
      <title>모두를 위한 클라우드 컴퓨팅 3</title>
      <link>https://wacilpong.github.io/blog/study/cloud-computing/3/</link>
      <pubDate>Mon, 03 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/study/cloud-computing/3/</guid>
      <description>HTC HPC 환경에서는 하나의 작업을 여러 작업으로 분리한다. 따라서 분리된 작업 처리 과정에서 상호 간 통신이 필요하다. MPI(Message Passing Interface) 방식으로 프로그램을 작성해야 한다. 상호</description>
    </item>
    
    <item>
      <title>모두를 위한 클라우드 컴퓨팅 2</title>
      <link>https://wacilpong.github.io/blog/study/cloud-computing/2/</link>
      <pubDate>Mon, 26 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/study/cloud-computing/2/</guid>
      <description>클라우드 컴퓨팅의 역사와 모델 유래 존 매카시(John McCarthy)가 1961년 MIT 100주년 기념연설에서 공개적으로 제안했던 유틸리티 컴퓨팅에서 나</description>
    </item>
    
    <item>
      <title>모두를 위한 클라우드 컴퓨팅 1</title>
      <link>https://wacilpong.github.io/blog/study/cloud-computing/1/</link>
      <pubDate>Mon, 19 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/study/cloud-computing/1/</guid>
      <description>기본 개념 클라우드 컴퓨팅 데이터 스토리지나 컴퓨팅 파워 같은 컴퓨터 시스템 리소스를 온디맨드 방식으로 제공하는 것이다. 즉, 원하는 시점에 컴퓨팅 자원을 쓸 수 있다</description>
    </item>
    
  </channel>
</rss>