<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Roomy</title>
    <link>https://wacilpong.github.io/blog/</link>
    <description>Recent content on Roomy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>kr-ko</language>
    <lastBuildDate>Sun, 28 Jun 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://wacilpong.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Mushroomy&#39;s dapping blockchain story</title>
      <link>https://wacilpong.github.io/blog/project/blockchain/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/project/blockchain/</guid>
      <description>Lectures  What is Blockchain? Bitcoin? Altcoin? ICO? 3rd Generation Blockchain &amp;amp; Just Starting Blockchain ! Just Make Your Genesis Block &amp;amp; Blockchain Coding Solidity Blockchain MUST BE associated with Open Source My token economy example project: Toon Hub Cosmos Blockchain: internet of interchain Truffle with ganache Truffle Tutorial: Pet Shop  </description>
    </item>
    
    <item>
      <title>TKIT service</title>
      <link>https://wacilpong.github.io/blog/project/tkit-service/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/project/tkit-service/</guid>
      <description>Overview Global Ticketing system service, TKIT. I created front web for TKIT in full-stack.
https://tkit.me
## Tech Stack - Front-end : Angular 6.x / SCSS - Back-end (APIs) : Python 3.x / Tornado 4.x / MongoDB (pymongo 3.x) </description>
    </item>
    
    <item>
      <title>SlackBot: Dumbledore</title>
      <link>https://wacilpong.github.io/blog/project/dumbledore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/project/dumbledore/</guid>
      <description></description>
    </item>
    
    <item>
      <title>After reading concepts of programming languages, by Robert W. Sebesta</title>
      <link>https://wacilpong.github.io/blog/post/review/after-reading-concepts-of-programming-languages/</link>
      <pubDate>Sun, 28 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/review/after-reading-concepts-of-programming-languages/</guid>
      <description>프로그래밍 언어론을 읽고 내맘대로 정리해보았다. 비전공자로 학원도 없이 실무로 개발을 시작한 터라, computer science에 관한 지식이 부족한 것 같아서 읽기 시작했</description>
    </item>
    
    <item>
      <title>Algorithm basic 3</title>
      <link>https://wacilpong.github.io/blog/post/computer-science/algorithm-basic-3/</link>
      <pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/computer-science/algorithm-basic-3/</guid>
      <description>칸아카데미의 알고리즘 코스를 들으며 정리해본 알고리즘 기초. https://ko.khanacademy.org/computing/computer-science/algorithms 그래프 표현 그래프는 순환여부에 따라 순환, 비순환 그래프가 있다. 그래프는 방향여부에 따라 방향</description>
    </item>
    
    <item>
      <title>Algorithm basic 2</title>
      <link>https://wacilpong.github.io/blog/post/computer-science/algorithm-basic-2/</link>
      <pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/computer-science/algorithm-basic-2/</guid>
      <description>칸아카데미의 알고리즘 코스를 들으며 정리해본 알고리즘 기초. https://ko.khanacademy.org/computing/computer-science/algorithms 좀더 빠른 정렬? feat. 재귀적 알고리즘 설계 선택정렬과 삽입정렬의 최대 실행시간은 O(n^2)이다</description>
    </item>
    
    <item>
      <title>Algorithm basic 1</title>
      <link>https://wacilpong.github.io/blog/post/computer-science/algorithm-basic-1/</link>
      <pubDate>Mon, 11 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/computer-science/algorithm-basic-1/</guid>
      <description>칸아카데미의 알고리즘 코스를 들으며 정리해본 알고리즘 기초. https://ko.khanacademy.org/computing/computer-science/algorithms 알고리즘 어떤 문제를 해결하기 위한 절차의 집합 컴퓨터 과학에서 알고리즘은 프로그램이 어떤 문제를</description>
    </item>
    
    <item>
      <title>Closure, especially in javascript</title>
      <link>https://wacilpong.github.io/blog/post/javascript/closure-especially-in-javascript/</link>
      <pubDate>Sat, 18 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/javascript/closure-especially-in-javascript/</guid>
      <description>클로저는 고차함수(함수를 반환하는 함수) 개념을 이용하여 스코프로 묶인 식별자를 바인딩하기 위한 일종의 기법이다. 클로저는 스코프 내의 실행 컨텍스트가 사라져</description>
    </item>
    
    <item>
      <title>Drag and drop API</title>
      <link>https://wacilpong.github.io/blog/post/html/drag-and-drop/</link>
      <pubDate>Sun, 15 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/html/drag-and-drop/</guid>
      <description>Draggable HTML5의 모든 요소에는 draggable이라는 속성을 붙일 수 있다. &amp;lt;p draggable=&amp;#34;true&amp;#34;&amp;gt;drag01&amp;lt;/p&amp;gt; &amp;lt;h3 draggable=&amp;#34;true&amp;#34;&amp;gt;drag02&amp;lt;/h3&amp;gt; &amp;lt;div draggable=&amp;#34;true&amp;#34;&amp;gt;drag03&amp;lt;/div&amp;gt; ... 이 속성이 적용된 요소를 이용해 드래그 이벤트를 활용할 수 있고 DragEvent, DataTransfer 와</description>
    </item>
    
    <item>
      <title>Scroll restoration</title>
      <link>https://wacilpong.github.io/blog/post/javascript/scroll-restoration/</link>
      <pubDate>Sun, 23 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/javascript/scroll-restoration/</guid>
      <description>재미있는 현상을 발견했다. 스크롤을 내리다가 특정 페이지로 이동 후, 다시 전 페이지로 이동(뒤로가기)하면 스크롤 위치를 기억하지 못하는 것이다. 왜 이럴까 한번</description>
    </item>
    
    <item>
      <title>Partial function and currying in javascript</title>
      <link>https://wacilpong.github.io/blog/post/javascript/currying-vs-partial-function/</link>
      <pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/javascript/currying-vs-partial-function/</guid>
      <description>Partial Function const sum = (a, b) =&amp;gt; a + b; const sum10 = sum.bind(null, 10); sum10(5); // 15 부분함수는 어떤 함수의 arguments에서 일부를 고정하여 원래 함수를 반환하는 함수이다. 즉, 함수를 체이닝하</description>
    </item>
    
    <item>
      <title>Babel polyfill and babel runtime</title>
      <link>https://wacilpong.github.io/blog/post/configuration/babel-polyfill-and-babel-runtime/</link>
      <pubDate>Fri, 17 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/configuration/babel-polyfill-and-babel-runtime/</guid>
      <description>Babel ? 바벨은 Javascript ES6+ 문법을 ES5로 변환해서 ES6+ 문법을 지원하지 않는 브라우저에서도 동작하도록 만들어주는 컴파일러 이다. 그리고 Javascript라는 같은 언</description>
    </item>
    
    <item>
      <title>Test with jest the untranspiled external libraries</title>
      <link>https://wacilpong.github.io/blog/post/configuration/untranspiled-published-external-library/</link>
      <pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/configuration/untranspiled-published-external-library/</guid>
      <description>jest in CRA // react-scripts/config/jest/babelTransform.js const babelJest = require(&amp;#34;babel-jest&amp;#34;); module.exports = babelJest.createTransformer({ presets: [require.resolve(&amp;#34;babel-preset-react-app&amp;#34;)], babelrc: false, configFile: false }); create-react-app 로 만들어진 리액트 프로젝트에는 jest가 이미 적용되어 있는데, react-scripts 의 jest 설정부분을 보면 알 수 있다. 그런데 jes</description>
    </item>
    
    <item>
      <title>Good bye 2019</title>
      <link>https://wacilpong.github.io/blog/post/review/good-bye-2019/</link>
      <pubDate>Fri, 27 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/review/good-bye-2019/</guid>
      <description>난생 처음 쓰는 회고. 간단하게 월별로 내가 뭘 했는지 한번 기록해보자. 월별기록 1월, 2월 프론트엔드 개발자, 혹은 팬케이크형 인간으로의 진화 이직을 결심하게 된</description>
    </item>
    
    <item>
      <title>After reading clean architecture, by Robert C. Martine</title>
      <link>https://wacilpong.github.io/blog/post/review/after-reading-clean-architecture/</link>
      <pubDate>Tue, 10 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/review/after-reading-clean-architecture/</guid>
      <description>클린 아키텍쳐를 읽고 내맘대로 정리해보았다. 컴포넌트 모든 언어에서 컴포넌트는 배포할 수 있는 단위 입자 동일한 시점에 동일한 이유로 변경되는 것들을 한데 묶고, 서</description>
    </item>
    
    <item>
      <title>Hoisting about function</title>
      <link>https://wacilpong.github.io/blog/post/javascript/hoisting-about-function/</link>
      <pubDate>Wed, 04 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/javascript/hoisting-about-function/</guid>
      <description>First of all, what is execution context ? 자바스크립트는 실행하는 코드가 기억하고 있는 환경이 존재하는데, 이 환경정보가 바로 실행 컨텍스트다. 이 컨텍스트를 구성할 수 있는 방법은 전역</description>
    </item>
    
    <item>
      <title>Splice Array</title>
      <link>https://wacilpong.github.io/blog/post/javascript/splice-your-array/</link>
      <pubDate>Fri, 01 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/javascript/splice-your-array/</guid>
      <description>가끔 Array.prototype.splice()가 굉장히 헷갈릴 때가 있는데, 그게 언제냐면 이 값을 할당할 때! Sometimes I confused about Array.prototype.splice() function, especially when assign the returned value from this ! Array.prototype.splice() do</description>
    </item>
    
    <item>
      <title>Prerender Status Code</title>
      <link>https://wacilpong.github.io/blog/post/configuration/prerender-status-code/</link>
      <pubDate>Sun, 06 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/configuration/prerender-status-code/</guid>
      <description>재직중인 회사에서 헤드리스 브라우저(headless browser)를 이용한 SEO를 다뤄보면서 여러 시행착오를 겪었다. SSR(Server Side Rendering)을</description>
    </item>
    
    <item>
      <title>File structure with React</title>
      <link>https://wacilpong.github.io/blog/post/javascript/react-file-structure/</link>
      <pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/javascript/react-file-structure/</guid>
      <description>Why I am considering it 앵귤러 5+로 프로젝트를 진행하다가 리액트를 쓰게 되었는데, 앵귤러는 처음 1.x버전부터 본인을 MVW(Model-View-Whateve</description>
    </item>
    
    <item>
      <title>Shadow DOM vs Virtual DOM</title>
      <link>https://wacilpong.github.io/blog/post/html/shadow-or-virtual/</link>
      <pubDate>Fri, 09 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/html/shadow-or-virtual/</guid>
      <description>DOM, Die Or March ? :P DOM(Document Object Model), is literally a structured model by objects. In other words, DOM represents the web-page (documents) by object-oriented. Web browsers handle the DOM, and we can interact with it using Javascript and CSS. BUT, when we manipulate the DOM, it takes long bcuz of the rendering calculation (reflow and repaint). DOM은 말 그대로 오브젝트</description>
    </item>
    
    <item>
      <title>Mushroomy&#39;s Last Blockcahin Story</title>
      <link>https://wacilpong.github.io/blog/post/blockchain/blockchain-10/</link>
      <pubDate>Fri, 26 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/blockchain/blockchain-10/</guid>
      <description>Truffle Tutorial: Pet Shop 솔직히 문서가 너무 잘되어 있어서 주요 내용+커맨드만 정리한다. https://truffleframework.com/tutorials/pet-shop 1. init vs unbox truffle init: Create empty truffle project without example contracts. truffle unbox: Unpack the exising truffle project. 2. pragma^ ? means &amp;ldquo;additional information that only the compiler cares about&amp;rdquo;. the caret symbol (^) means</description>
    </item>
    
    <item>
      <title>Mushroomy&#39;s 9th Blockcahin Story</title>
      <link>https://wacilpong.github.io/blog/post/blockchain/blockchain-9/</link>
      <pubDate>Thu, 25 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/blockchain/blockchain-9/</guid>
      <description>Truffle Command 1. 설치 및 버전 확인: 아래의 버전내용이 뜨지 않으면 npm i -g truffle로 설치하자. test $ truffle --version Truffle v4.1.14 (core: 4.1.14) Solidity v0.4.24 (solc-js) 2. 트러플 프로젝트 초기화 과정 test $ truffle init Downloading... Unpacking...</description>
    </item>
    
    <item>
      <title>Mushroomy&#39;s 8th Blockcahin Story</title>
      <link>https://wacilpong.github.io/blog/post/blockchain/blockchain-8/</link>
      <pubDate>Wed, 24 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/blockchain/blockchain-8/</guid>
      <description>해결되기 어려운 블록체인 문제, Oracle Problem? Cosmos Interchain: 수많은 코인이 있고, 이들을 연결하려고 하는 개념 BIA: Blockchain Interoperablility Alliance ex) Aion, iCon, wanchain Cosmos: internet of interchain dApp --------------------------- - [dApp] [dApp]... - - Application(EVM) - - Consensus - - Networking - --------------------------- 이렇게</description>
    </item>
    
    <item>
      <title>Mushroomy&#39;s 7th Blockcahin Story</title>
      <link>https://wacilpong.github.io/blog/post/blockchain/blockchain-7/</link>
      <pubDate>Tue, 23 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/blockchain/blockchain-7/</guid>
      <description>Token economy project example : example: Toon Hub</description>
    </item>
    
    <item>
      <title>Mushroomy&#39;s 6th Blockcahin Story</title>
      <link>https://wacilpong.github.io/blog/post/blockchain/blockchain-6/</link>
      <pubDate>Mon, 22 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/blockchain/blockchain-6/</guid>
      <description>* Gas Fee 트랜잭션을 처리하는 데 사용되는 수수료 (송금 / 스마트컨트랙트 배포 및 수정) 채굴자가 받게 된다. GWEI라는 단위를 사용한다. 사용한 gas x gas price, 하지만</description>
    </item>
    
    <item>
      <title>Mushroomy&#39;s 5th Blockcahin Story</title>
      <link>https://wacilpong.github.io/blog/post/blockchain/blockchain-5/</link>
      <pubDate>Fri, 19 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/blockchain/blockchain-5/</guid>
      <description>* geth REPL (Read Eval Print Loop) REPL will be appeared to you if you start startgethconsole.sh. Practice these geth commands. miner.start() eth.pendingTransactions eth.getTransaction(&amp;#34;{transaction-hash-id}&amp;#34;) eth.blockNumber miner.stop() personal.newAccount() miner.setEtherbase(eth.accounts[1]) pendingTransacrtions: Look at the list of pending transactions. blockNumber: Look at the current block number. setEtherbase(): Change the default account. - web3 Ethereum javascript API, so, can manage ethereum blockchain transactions in web browser. Proxy {_requestManager: a, currentProvider: Proxy, eth: n, db:</description>
    </item>
    
    <item>
      <title>Mushroomy&#39;s 4th Blockcahin Story</title>
      <link>https://wacilpong.github.io/blog/post/blockchain/blockchain-4/</link>
      <pubDate>Thu, 18 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/blockchain/blockchain-4/</guid>
      <description>참고: Pow(채굴), PoS(이자지급), PoA, DPoS(투표선출), master node(full block + 네트워크 중계) * Make Genesis Block Now 1. puppeth geth설치 및 환경변수 설정까지 끝났다면</description>
    </item>
    
    <item>
      <title>Mushroomy&#39;s 3rd Blockcahin Story</title>
      <link>https://wacilpong.github.io/blog/post/blockchain/blockchain-3/</link>
      <pubDate>Wed, 17 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/blockchain/blockchain-3/</guid>
      <description>추신: 이더리움 창시자 비탈릭 부테린(Виталик Бутерин)은 31. Jan. 1994 로, 나랑 생년월일이 똑같다 헉! 3G blockchain: EOS : Steemit, bitshare를 만든 댄 라리머</description>
    </item>
    
    <item>
      <title>Mushroomy&#39;s 2nd Blockcahin Story</title>
      <link>https://wacilpong.github.io/blog/post/blockchain/blockchain-2/</link>
      <pubDate>Tue, 16 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/blockchain/blockchain-2/</guid>
      <description>Cryptocurrency !== &amp;lsquo;가상화폐&amp;rsquo; 교환수단, 사회적 약속, 통화량 조절가능한 &amp;lsquo;돈&#39;의 목적을 모두 충족하면서 암호화된 화폐이다. - Bitcoin</description>
    </item>
    
    <item>
      <title>Mushroomy&#39;s 1st Blockcahin Story</title>
      <link>https://wacilpong.github.io/blog/post/blockchain/blockchain-1/</link>
      <pubDate>Mon, 15 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/blockchain/blockchain-1/</guid>
      <description>Blockchain Database 기반의 장부라고 보면 된다. 트랜잭션을 해쉬값과 함께 블록(비트코인은 대략 1MB정도의 데이터를 1블록에 담음)에 저장하고, 그 다음 블록은 이전 해쉬값과</description>
    </item>
    
    <item>
      <title>Angular directive example</title>
      <link>https://wacilpong.github.io/blog/post/javascript/angular-directive/</link>
      <pubDate>Thu, 02 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/javascript/angular-directive/</guid>
      <description>What is directive ? Use it to attach custom behavior to elements in the DOM.

Basic Example  This is a simple directive to change chevron background-image as clicking the element.
 1. HTML &amp;lt;label appChevron class=&amp;#34;chevron&amp;#34; style=&amp;#34;background-image: url(&amp;#39;/assets/images/arrow-down.svg&amp;#39;);&amp;#34; &amp;gt;&amp;lt;/label&amp;gt; 
2. TS (Of course it needs to be imported to app.module.ts declarations) import { Directive, ElementRef } from &amp;#34;@angular/core&amp;#34;; @Directive({ selector: &amp;#34;[appChevron]&amp;#34; }) export class ChevronValidate { constructor(el: ElementRef) { const div = document.</description>
    </item>
    
    <item>
      <title>When we connect ssh with .pem</title>
      <link>https://wacilpong.github.io/blog/post/configuration/when-connect-ssh/</link>
      <pubDate>Tue, 03 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/configuration/when-connect-ssh/</guid>
      <description>We sometimes need to connect to computer in other network. It is necessary the key like pem(Private Enhanced Mail) When we connect. I will just write the flow about it.

flow  Generate .pem key (I am using AWS). Change mode of .pem file to 400 to read it. Identify file and connect to ssh (AWS linux for me). DONE  

Change permission of file I will change mode of key file and connect to ssh with it.</description>
    </item>
    
    <item>
      <title>Publish to aws s3 with s3cmd</title>
      <link>https://wacilpong.github.io/blog/post/configuration/aws-publish-to-s3/</link>
      <pubDate>Fri, 09 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/configuration/aws-publish-to-s3/</guid>
      <description>1. Create S3 bucket Create S3 bucket with public access in aws S3 console, because it is just for testing. And add static website hosting property with index.html (entry point).

2. Create CloudFront Distributions Create in aws CloudFront console. And Just keep all settings.

3. Connect domain with CloudFront If you don&#39;t have routing domain in aws Route 53 console, create it first like test.example.com. It just depends on your url rules.</description>
    </item>
    
    <item>
      <title>To configure https with AWS</title>
      <link>https://wacilpong.github.io/blog/post/configuration/set-https-with-aws/</link>
      <pubDate>Fri, 09 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/configuration/set-https-with-aws/</guid>
      <description>flow Request a certification for SSL/TLS in ACM (AWS Certificate Manager). Create ELB (Elastic Load Balancer) from EC2 management console. Create EC2 instance, and connect to ELB. Create record set or new hosted zone, and set alias the ELB in Route53. Access SSH with the keypair that can be generated while creating EC2 instance. Now we can access public IP if we didn&#39;t configure anything in AWS console. So, connect</description>
    </item>
    
    <item>
      <title>To set virtual python environment with mongoDB</title>
      <link>https://wacilpong.github.io/blog/post/configuration/pyvenv-with-mongodb/</link>
      <pubDate>Fri, 09 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/configuration/pyvenv-with-mongodb/</guid>
      <description>Step 1. Install python and mongoDB I am using homebrew. So it can be possible to use brew command. Oh, and macOS actually has a python(2.x), but I need 3.x version so I installed it. 맥에는 파이썬 2.x 버전으로 이미 설치되어 있지만, 나는 3.x버전이 필요해서 따로</description>
    </item>
    
    <item>
      <title>My recently junior web developer interview</title>
      <link>https://wacilpong.github.io/blog/post/review/my-recently-interview/</link>
      <pubDate>Mon, 11 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/review/my-recently-interview/</guid>
      <description>what kind of companies? 힙한 분위기를 느끼고 싶어서 스타트업만 건드렸다. 블록체인, 핀테크, 클라우드IDE, AI 등등 다양한 분야의 회사에 신입 개발자로 지원했다. 프론트엔</description>
    </item>
    
    <item>
      <title>2020</title>
      <link>https://wacilpong.github.io/blog/learned/what-i-learned-2020/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/learned/what-i-learned-2020/</guid>
      <description>2020-07-01 angular entryComponent 진입 컴포넌트로, 2가지 상황에서 사용된다. 앵귤러는 @NgModule.bootstrap에 지정된 컴포넌트를 자동으로 인식하고 진입 컴포넌트로</description>
    </item>
    
  </channel>
</rss>