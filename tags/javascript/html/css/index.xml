<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>javascript/html/css on Roomy</title>
    <link>https://wacilpong.github.io/blog/tags/javascript/html/css/</link>
    <description>Recent content in javascript/html/css on Roomy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>kr-ko</language>
    <lastBuildDate>Sun, 09 Aug 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://wacilpong.github.io/blog/tags/javascript/html/css/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rxjs marble testing with jasmine-marbles</title>
      <link>https://wacilpong.github.io/blog/post/javascript-html-css/rxjs-marble-testing/</link>
      <pubDate>Sun, 09 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/javascript-html-css/rxjs-marble-testing/</guid>
      <description>What is marble diagram? 마블 다이어그램은 위 사진처럼 일련의 시간 흐름에서 발생(emit)되는 값을 조각으로 명시하는 것이다. 어떠한 sequence 중에서 일정 부분을 포착해놓은 것이라</description>
    </item>
    
    <item>
      <title>Closure, especially in javascript</title>
      <link>https://wacilpong.github.io/blog/post/javascript-html-css/closure-especially-in-javascript/</link>
      <pubDate>Sat, 18 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/javascript-html-css/closure-especially-in-javascript/</guid>
      <description>클로저는 고차함수(함수를 반환하는 함수) 개념을 이용하여 스코프로 묶인 식별자를 바인딩하기 위한 일종의 기법이다. 클로저는 스코프 내의 실행 컨텍스트가 사라져</description>
    </item>
    
    <item>
      <title>Drag and drop API</title>
      <link>https://wacilpong.github.io/blog/post/javascript-html-css/drag-and-drop/</link>
      <pubDate>Sun, 15 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/javascript-html-css/drag-and-drop/</guid>
      <description>Draggable HTML5의 모든 요소에는 draggable이라는 속성을 붙일 수 있다. &amp;lt;p draggable=&amp;#34;true&amp;#34;&amp;gt;drag01&amp;lt;/p&amp;gt; &amp;lt;h3 draggable=&amp;#34;true&amp;#34;&amp;gt;drag02&amp;lt;/h3&amp;gt; &amp;lt;div draggable=&amp;#34;true&amp;#34;&amp;gt;drag03&amp;lt;/div&amp;gt; ... 이 속성이 적용된 요소를 이용해 드래그 이벤트를 활용할 수 있고 DragEvent, DataTransfer 와</description>
    </item>
    
    <item>
      <title>Scroll restoration</title>
      <link>https://wacilpong.github.io/blog/post/javascript-html-css/scroll-restoration/</link>
      <pubDate>Sun, 23 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/javascript-html-css/scroll-restoration/</guid>
      <description>재미있는 현상을 발견했다. 스크롤을 내리다가 특정 페이지로 이동 후, 다시 전 페이지로 이동(뒤로가기)하면 스크롤 위치를 기억하지 못하는 것이다. 왜 이럴까 한번</description>
    </item>
    
    <item>
      <title>Partial function and currying in javascript</title>
      <link>https://wacilpong.github.io/blog/post/javascript-html-css/currying-vs-partial-function/</link>
      <pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/javascript-html-css/currying-vs-partial-function/</guid>
      <description>Partial Function const sum = (a, b) =&amp;gt; a + b; const sum10 = sum.bind(null, 10); sum10(5); // 15 부분함수는 어떤 함수의 arguments에서 일부를 고정하여 원래 함수를 반환하는 함수이다. 즉, 함수를 체이닝하</description>
    </item>
    
    <item>
      <title>Hoisting about function</title>
      <link>https://wacilpong.github.io/blog/post/javascript-html-css/hoisting-about-function/</link>
      <pubDate>Wed, 04 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/javascript-html-css/hoisting-about-function/</guid>
      <description>First of all, what is execution context ? 자바스크립트는 실행하는 코드가 기억하고 있는 환경이 존재하는데, 이 환경정보가 바로 실행 컨텍스트다. 이 컨텍스트를 구성할 수 있는 방법은 전역</description>
    </item>
    
    <item>
      <title>Splice Array</title>
      <link>https://wacilpong.github.io/blog/post/javascript-html-css/splice-your-array/</link>
      <pubDate>Fri, 01 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/javascript-html-css/splice-your-array/</guid>
      <description>가끔 Array.prototype.splice()가 굉장히 헷갈릴 때가 있는데, 그게 언제냐면 이 값을 할당할 때! Sometimes I confused about Array.prototype.splice() function, especially when assign the returned value from this ! Array.prototype.splice() do</description>
    </item>
    
    <item>
      <title>File structure with React</title>
      <link>https://wacilpong.github.io/blog/post/javascript-html-css/react-file-structure/</link>
      <pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/javascript-html-css/react-file-structure/</guid>
      <description>Why I am considering it 앵귤러 5+로 프로젝트를 진행하다가 리액트를 쓰게 되었는데, 앵귤러는 처음 1.x버전부터 본인을 MVW(Model-View-Whateve</description>
    </item>
    
    <item>
      <title>Shadow DOM vs Virtual DOM</title>
      <link>https://wacilpong.github.io/blog/post/javascript-html-css/shadow-or-virtual/</link>
      <pubDate>Fri, 09 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/javascript-html-css/shadow-or-virtual/</guid>
      <description>DOM, Die Or March ? :P DOM(Document Object Model), is literally a structured model by objects. In other words, DOM represents the web-page (documents) by object-oriented. Web browsers handle the DOM, and we can interact with it using Javascript and CSS. BUT, when we manipulate the DOM, it takes long bcuz of the rendering calculation (reflow and repaint). DOM은 말 그대로 오브젝트</description>
    </item>
    
    <item>
      <title>Angular directive example</title>
      <link>https://wacilpong.github.io/blog/post/javascript-html-css/angular-directive/</link>
      <pubDate>Thu, 02 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wacilpong.github.io/blog/post/javascript-html-css/angular-directive/</guid>
      <description>What is directive ? Use it to attach custom behavior to elements in the DOM.

Basic Example  This is a simple directive to change chevron background-image as clicking the element.
 1. HTML &amp;lt;label appChevron class=&amp;#34;chevron&amp;#34; style=&amp;#34;background-image: url(&amp;#39;/assets/images/arrow-down.svg&amp;#39;);&amp;#34; &amp;gt;&amp;lt;/label&amp;gt; 
2. TS (Of course it needs to be imported to app.module.ts declarations) import { Directive, ElementRef } from &amp;#34;@angular/core&amp;#34;; @Directive({ selector: &amp;#34;[appChevron]&amp;#34; }) export class ChevronValidate { constructor(el: ElementRef) { const div = document.</description>
    </item>
    
  </channel>
</rss>